//
// File generated by rootcint at Mon Jul  8 18:16:50 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void HitMatrix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HitMatrix_Dictionary();
   static void *new_HitMatrix(void *p = 0);
   static void *newArray_HitMatrix(Long_t size, void *p);
   static void delete_HitMatrix(void *p);
   static void deleteArray_HitMatrix(void *p);
   static void destruct_HitMatrix(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HitMatrix*)
   {
      ::HitMatrix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HitMatrix),0);
      static ::ROOT::TGenericClassInfo 
         instance("HitMatrix", "/home/patrick/SiPM_MC/include/HitMatrix.h", 23,
                  typeid(::HitMatrix), DefineBehavior(ptr, ptr),
                  0, &HitMatrix_Dictionary, isa_proxy, 0,
                  sizeof(::HitMatrix) );
      instance.SetNew(&new_HitMatrix);
      instance.SetNewArray(&newArray_HitMatrix);
      instance.SetDelete(&delete_HitMatrix);
      instance.SetDeleteArray(&deleteArray_HitMatrix);
      instance.SetDestructor(&destruct_HitMatrix);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HitMatrix*)
   {
      return GenerateInitInstanceLocal((::HitMatrix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HitMatrix*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HitMatrix_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HitMatrix*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void PhotonList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void PhotonList_Dictionary();
   static void *new_PhotonList(void *p = 0);
   static void *newArray_PhotonList(Long_t size, void *p);
   static void delete_PhotonList(void *p);
   static void deleteArray_PhotonList(void *p);
   static void destruct_PhotonList(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PhotonList*)
   {
      ::PhotonList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::PhotonList),0);
      static ::ROOT::TGenericClassInfo 
         instance("PhotonList", "/home/patrick/SiPM_MC/include/PhotonList.h", 16,
                  typeid(::PhotonList), DefineBehavior(ptr, ptr),
                  0, &PhotonList_Dictionary, isa_proxy, 0,
                  sizeof(::PhotonList) );
      instance.SetNew(&new_PhotonList);
      instance.SetNewArray(&newArray_PhotonList);
      instance.SetDelete(&delete_PhotonList);
      instance.SetDeleteArray(&deleteArray_PhotonList);
      instance.SetDestructor(&destruct_PhotonList);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PhotonList*)
   {
      return GenerateInitInstanceLocal((::PhotonList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PhotonList*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void PhotonList_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::PhotonList*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void PhotonSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void PhotonSource_Dictionary();
   static void *new_PhotonSource(void *p = 0);
   static void *newArray_PhotonSource(Long_t size, void *p);
   static void delete_PhotonSource(void *p);
   static void deleteArray_PhotonSource(void *p);
   static void destruct_PhotonSource(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PhotonSource*)
   {
      ::PhotonSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::PhotonSource),0);
      static ::ROOT::TGenericClassInfo 
         instance("PhotonSource", "/home/patrick/SiPM_MC/include/PhotonSource.h", 17,
                  typeid(::PhotonSource), DefineBehavior(ptr, ptr),
                  0, &PhotonSource_Dictionary, isa_proxy, 0,
                  sizeof(::PhotonSource) );
      instance.SetNew(&new_PhotonSource);
      instance.SetNewArray(&newArray_PhotonSource);
      instance.SetDelete(&delete_PhotonSource);
      instance.SetDeleteArray(&deleteArray_PhotonSource);
      instance.SetDestructor(&destruct_PhotonSource);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PhotonSource*)
   {
      return GenerateInitInstanceLocal((::PhotonSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PhotonSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void PhotonSource_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::PhotonSource*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void sipmMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void sipmMC_Dictionary();
   static void *new_sipmMC(void *p = 0);
   static void *newArray_sipmMC(Long_t size, void *p);
   static void delete_sipmMC(void *p);
   static void deleteArray_sipmMC(void *p);
   static void destruct_sipmMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::sipmMC*)
   {
      ::sipmMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::sipmMC),0);
      static ::ROOT::TGenericClassInfo 
         instance("sipmMC", "/home/patrick/SiPM_MC/include/sipmMC.h", 36,
                  typeid(::sipmMC), DefineBehavior(ptr, ptr),
                  0, &sipmMC_Dictionary, isa_proxy, 0,
                  sizeof(::sipmMC) );
      instance.SetNew(&new_sipmMC);
      instance.SetNewArray(&newArray_sipmMC);
      instance.SetDelete(&delete_sipmMC);
      instance.SetDeleteArray(&deleteArray_sipmMC);
      instance.SetDestructor(&destruct_sipmMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::sipmMC*)
   {
      return GenerateInitInstanceLocal((::sipmMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::sipmMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void sipmMC_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::sipmMC*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void daqMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void daqMC_Dictionary();
   static void *new_daqMC(void *p = 0);
   static void *newArray_daqMC(Long_t size, void *p);
   static void delete_daqMC(void *p);
   static void deleteArray_daqMC(void *p);
   static void destruct_daqMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::daqMC*)
   {
      ::daqMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::daqMC),0);
      static ::ROOT::TGenericClassInfo 
         instance("daqMC", "/home/patrick/SiPM_MC/include/daqMC.h", 44,
                  typeid(::daqMC), DefineBehavior(ptr, ptr),
                  0, &daqMC_Dictionary, isa_proxy, 0,
                  sizeof(::daqMC) );
      instance.SetNew(&new_daqMC);
      instance.SetNewArray(&newArray_daqMC);
      instance.SetDelete(&delete_daqMC);
      instance.SetDeleteArray(&deleteArray_daqMC);
      instance.SetDestructor(&destruct_daqMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::daqMC*)
   {
      return GenerateInitInstanceLocal((::daqMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::daqMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void daqMC_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::daqMC*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void gossipGUI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void gossipGUI_Dictionary();
   static void *new_gossipGUI(void *p = 0);
   static void *newArray_gossipGUI(Long_t size, void *p);
   static void delete_gossipGUI(void *p);
   static void deleteArray_gossipGUI(void *p);
   static void destruct_gossipGUI(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::gossipGUI*)
   {
      ::gossipGUI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::gossipGUI),0);
      static ::ROOT::TGenericClassInfo 
         instance("gossipGUI", "/home/patrick/SiPM_MC/include/gossipGUI.h", 17,
                  typeid(::gossipGUI), DefineBehavior(ptr, ptr),
                  0, &gossipGUI_Dictionary, isa_proxy, 0,
                  sizeof(::gossipGUI) );
      instance.SetNew(&new_gossipGUI);
      instance.SetNewArray(&newArray_gossipGUI);
      instance.SetDelete(&delete_gossipGUI);
      instance.SetDeleteArray(&deleteArray_gossipGUI);
      instance.SetDestructor(&destruct_gossipGUI);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::gossipGUI*)
   {
      return GenerateInitInstanceLocal((::gossipGUI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gossipGUI*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void gossipGUI_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::gossipGUI*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_PhotonList(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PhotonList : new ::PhotonList;
   }
   static void *newArray_PhotonList(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PhotonList[nElements] : new ::PhotonList[nElements];
   }
   // Wrapper around operator delete
   static void delete_PhotonList(void *p) {
      delete ((::PhotonList*)p);
   }
   static void deleteArray_PhotonList(void *p) {
      delete [] ((::PhotonList*)p);
   }
   static void destruct_PhotonList(void *p) {
      typedef ::PhotonList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PhotonList

namespace ROOT {
   // Wrappers around operator new
   static void *new_PhotonSource(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PhotonSource : new ::PhotonSource;
   }
   static void *newArray_PhotonSource(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PhotonSource[nElements] : new ::PhotonSource[nElements];
   }
   // Wrapper around operator delete
   static void delete_PhotonSource(void *p) {
      delete ((::PhotonSource*)p);
   }
   static void deleteArray_PhotonSource(void *p) {
      delete [] ((::PhotonSource*)p);
   }
   static void destruct_PhotonSource(void *p) {
      typedef ::PhotonSource current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PhotonSource

namespace ROOT {
   // Wrappers around operator new
   static void *new_HitMatrix(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HitMatrix : new ::HitMatrix;
   }
   static void *newArray_HitMatrix(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HitMatrix[nElements] : new ::HitMatrix[nElements];
   }
   // Wrapper around operator delete
   static void delete_HitMatrix(void *p) {
      delete ((::HitMatrix*)p);
   }
   static void deleteArray_HitMatrix(void *p) {
      delete [] ((::HitMatrix*)p);
   }
   static void destruct_HitMatrix(void *p) {
      typedef ::HitMatrix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HitMatrix

namespace ROOT {
   // Wrappers around operator new
   static void *new_sipmMC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::sipmMC : new ::sipmMC;
   }
   static void *newArray_sipmMC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::sipmMC[nElements] : new ::sipmMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_sipmMC(void *p) {
      delete ((::sipmMC*)p);
   }
   static void deleteArray_sipmMC(void *p) {
      delete [] ((::sipmMC*)p);
   }
   static void destruct_sipmMC(void *p) {
      typedef ::sipmMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::sipmMC

namespace ROOT {
   // Wrappers around operator new
   static void *new_daqMC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::daqMC : new ::daqMC;
   }
   static void *newArray_daqMC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::daqMC[nElements] : new ::daqMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_daqMC(void *p) {
      delete ((::daqMC*)p);
   }
   static void deleteArray_daqMC(void *p) {
      delete [] ((::daqMC*)p);
   }
   static void destruct_daqMC(void *p) {
      typedef ::daqMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::daqMC

namespace ROOT {
   // Wrappers around operator new
   static void *new_gossipGUI(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gossipGUI : new ::gossipGUI;
   }
   static void *newArray_gossipGUI(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gossipGUI[nElements] : new ::gossipGUI[nElements];
   }
   // Wrapper around operator delete
   static void delete_gossipGUI(void *p) {
      delete ((::gossipGUI*)p);
   }
   static void deleteArray_gossipGUI(void *p) {
      delete [] ((::gossipGUI*)p);
   }
   static void destruct_gossipGUI(void *p) {
      typedef ::gossipGUI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::gossipGUI

/********************************************************
* src/Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/patrick/SiPM_MC/include/HitMatrix.h");
  G__add_compiledheader("/home/patrick/SiPM_MC/include/PhotonList.h");
  G__add_compiledheader("/home/patrick/SiPM_MC/include/PhotonSource.h");
  G__add_compiledheader("/home/patrick/SiPM_MC/include/sipmMC.h");
  G__add_compiledheader("/home/patrick/SiPM_MC/include/daqMC.h");
  G__add_compiledheader("/home/patrick/SiPM_MC/include/gossipGUI.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HitMatrix */
static int G__Dict_279_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitMatrix* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitMatrix[n];
     } else {
       p = new((void*) gvp) HitMatrix[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitMatrix;
     } else {
       p = new((void*) gvp) HitMatrix;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_HitMatrix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitMatrix*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitMatrix*) G__getstructoffset())->Clear((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitMatrix*) G__getstructoffset())->AddHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitMatrix*) G__getstructoffset())->HitProcessed((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((HitMatrix*) G__getstructoffset())->GetHit((unsigned int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HitMatrix*) G__getstructoffset())->GetProcessed((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HitMatrix*) G__getstructoffset())->GetPreviousTime((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitMatrix*) G__getstructoffset())->FindHit(*((vector<double>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitMatrix*) G__getstructoffset())->EraseHit(*((vector<double>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitMatrix*) G__getstructoffset())->nHits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitMatrix*) G__getstructoffset())->nHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HitMatrix*) G__getstructoffset())->DrawMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitMatrix*) G__getstructoffset())->PrintMatrix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitMatrix*) G__getstructoffset())->SetAmplitude((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HitMatrix*) G__getstructoffset())->SetGate((double) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HitMatrix*) G__getstructoffset())->SetGate((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_279_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitMatrix*) G__getstructoffset())->SetGeometry((TH2I*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_279_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HitMatrix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HitMatrix(*(HitMatrix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_HitMatrix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HitMatrix G__THitMatrix;
static int G__Dict_279_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HitMatrix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HitMatrix*) (soff+(sizeof(HitMatrix)*i)))->~G__THitMatrix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HitMatrix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HitMatrix*) (soff))->~G__THitMatrix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_279_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitMatrix* dest = (HitMatrix*) G__getstructoffset();
   *dest = *(HitMatrix*) libp->para[0].ref;
   const HitMatrix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PhotonList */
static int G__Dict_284_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PhotonList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PhotonList[n];
     } else {
       p = new((void*) gvp) PhotonList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PhotonList;
     } else {
       p = new((void*) gvp) PhotonList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_PhotonList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_284_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonList*) G__getstructoffset())->AddPhoton((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_284_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonList*) G__getstructoffset())->AddPhotonList(*((PhotonList*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_284_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PhotonList* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PhotonList(*(PhotonList*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_PhotonList));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PhotonList G__TPhotonList;
static int G__Dict_284_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PhotonList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PhotonList*) (soff+(sizeof(PhotonList)*i)))->~G__TPhotonList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PhotonList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PhotonList*) (soff))->~G__TPhotonList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_284_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PhotonList* dest = (PhotonList*) G__getstructoffset();
   *dest = *(PhotonList*) libp->para[0].ref;
   const PhotonList& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PhotonSource */
static int G__Dict_287_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PhotonSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PhotonSource[n];
     } else {
       p = new((void*) gvp) PhotonSource[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PhotonSource;
     } else {
       p = new((void*) gvp) PhotonSource;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_PhotonSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         PhotonList* pobj;
         PhotonList xobj = ((PhotonSource*) G__getstructoffset())->GeneratePhotons();
         pobj = new PhotonList(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetShape(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetShape((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetPulse(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetPulse((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetXY((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetXYWidth((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetTimeWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetRiseTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetNgamma((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_287_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhotonSource*) G__getstructoffset())->SetFluctuation((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PhotonSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PhotonSource(*(PhotonSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_PhotonSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PhotonSource G__TPhotonSource;
static int G__Dict_287_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PhotonSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PhotonSource*) (soff+(sizeof(PhotonSource)*i)))->~G__TPhotonSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PhotonSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PhotonSource*) (soff))->~G__TPhotonSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PhotonSource* dest = (PhotonSource*) G__getstructoffset();
   *dest = *(PhotonSource*) libp->para[0].ref;
   const PhotonSource& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* sipmMC */
static int G__Dict_336_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   sipmMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new sipmMC[n];
     } else {
       p = new((void*) gvp) sipmMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new sipmMC;
     } else {
       p = new((void*) gvp) sipmMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_sipmMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) sipmMC::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((sipmMC*) G__getstructoffset())->Generate(*((PhotonList*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((sipmMC*) G__getstructoffset())->GetParaFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((sipmMC*) G__getstructoffset())->SetGeometry(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((sipmMC*) G__getstructoffset())->SetGeometry((TH2I*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((sipmMC*) G__getstructoffset())->SetPulseShape((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((sipmMC*) G__getstructoffset())->SetPulseShape((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((sipmMC*) G__getstructoffset())->SetSampling((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((sipmMC*) G__getstructoffset())->SetCutoff((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((sipmMC*) G__getstructoffset())->SetGate((double) G__double(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((sipmMC*) G__getstructoffset())->SetGate((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((sipmMC*) G__getstructoffset())->GetWaveform());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         GCharge* pobj;
         GCharge xobj = ((sipmMC*) G__getstructoffset())->GetCharge();
         pobj = new GCharge(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((sipmMC*) G__getstructoffset())->GetGate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((sipmMC*) G__getstructoffset())->GetPulseShape());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((sipmMC*) G__getstructoffset())->GetHitMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((sipmMC*) G__getstructoffset())->GetNpix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_336_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((sipmMC*) G__getstructoffset())->GetSampling());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_336_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   sipmMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new sipmMC(*(sipmMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_sipmMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef sipmMC G__TsipmMC;
static int G__Dict_336_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (sipmMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((sipmMC*) (soff+(sizeof(sipmMC)*i)))->~G__TsipmMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (sipmMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((sipmMC*) (soff))->~G__TsipmMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_336_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   sipmMC* dest = (sipmMC*) G__getstructoffset();
   *dest = *(sipmMC*) libp->para[0].ref;
   const sipmMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* daqMC */
static int G__Dict_338_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const daqMC*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((daqMC*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((daqMC*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((daqMC*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((daqMC*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((daqMC*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((daqMC*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((daqMC*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((daqMC*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((daqMC*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("EmitVA: more than 56 var args\n");
   }
      ((daqMC*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   daqMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new daqMC[n];
     } else {
       p = new((void*) gvp) daqMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new daqMC;
     } else {
       p = new((void*) gvp) daqMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_daqMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->SetSiPM((sipmMC*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->SetPhotonSource((PhotonSource*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Statistic((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((daqMC*) G__getstructoffset())->Scope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((daqMC*) G__getstructoffset())->QDCSpectrum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((daqMC*) G__getstructoffset())->ThreshScan((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((daqMC*) G__getstructoffset())->TDCSpectrum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         GResonseCurve* pobj;
         GResonseCurve xobj = ((daqMC*) G__getstructoffset())->DynamicRange((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new GResonseCurve(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((daqMC*) G__getstructoffset())->QDC((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->SetQDCChannels((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->SetPedestal((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->SetDiscriMinTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->SetDiscriWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((daqMC*) G__getstructoffset())->Discriminator((TGraph*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_338_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqMC*) G__getstructoffset())->Progress((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef daqMC G__TdaqMC;
static int G__Dict_338_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (daqMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((daqMC*) (soff+(sizeof(daqMC)*i)))->~G__TdaqMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (daqMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((daqMC*) (soff))->~G__TdaqMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* gossipGUI */
static int G__Dict_467_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gossipGUI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gossipGUI[n];
     } else {
       p = new((void*) gvp) gossipGUI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gossipGUI;
     } else {
       p = new((void*) gvp) gossipGUI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_gossipGUI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->BuildMainFrame();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->BuildLoadFrame();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->BuildSiPMFrame((TGFrame*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->BuildLightSourceFrame((TGFrame*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->BuildDAQFrame((TGFrame*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->onTabSwitch((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->onRunButtonClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->onCancelButtonClicked();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->SetParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->SetProgress((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gossipGUI*) G__getstructoffset())->SelectMeasurement((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   gossipGUI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new gossipGUI(*(gossipGUI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_gossipGUI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gossipGUI G__TgossipGUI;
static int G__Dict_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (gossipGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gossipGUI*) (soff+(sizeof(gossipGUI)*i)))->~G__TgossipGUI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (gossipGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((gossipGUI*) (soff))->~G__TgossipGUI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gossipGUI* dest = (gossipGUI*) G__getstructoffset();
   *dest = *(gossipGUI*) libp->para[0].ref;
   const gossipGUI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HitMatrix */

/* PhotonList */

/* PhotonSource */

/* sipmMC */

/* daqMC */

/* gossipGUI */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_HitMatrix))) {
     HitMatrix *G__Lderived;
     G__Lderived=(HitMatrix*)0x1000;
     {
       vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > *G__Lpbase=(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_HitMatrix),G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_PhotonList))) {
     PhotonList *G__Lderived;
     G__Lderived=(PhotonList*)0x1000;
     {
       vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > *G__Lpbase=(vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_PhotonList),G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__DictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HitMatrix */
static void G__setup_memvarHitMatrix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_HitMatrix));
   { HitMatrix *p; p=(HitMatrix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gate=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"gateCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2I),-1,-1,4,"h_geometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Nx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Ny=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2D),-1,-1,4,"h_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"c_hitMatrix=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PhotonList */
static void G__setup_memvarPhotonList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_PhotonList));
   { PhotonList *p; p=(PhotonList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"photon=",0,"*<Photon vector: 0:x, 1:y, 2:time. x,y coordinates in mm! (SiPM center is at 0,0)*/");
   }
   G__tag_memvar_reset();
}


   /* PhotonSource */
static void G__setup_memvarPhotonSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_PhotonSource));
   { PhotonSource *p; p=(PhotonSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_PhotonList),-1,-1,4,"photonList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TRandom3),-1,-1,4,"r=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fluctuation=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"yWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"t=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tRise=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Ngamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"shape=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"pulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2),-1,-1,4,"hShape=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1),-1,-1,4,"hTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TF1),-1,-1,4,"fExp2=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* sipmMC */
static void G__setup_memvarsipmMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_sipmMC));
   { sipmMC *p; p=(sipmMC*)0x1000; if (p) { }
   G__memvar_setup((void*)(&sipmMC::fInstance),85,0,0,G__get_linked_tagnum(&G__DictLN_sipmMC),-1,-2,1,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NpixX)-(long)(p)),105,0,0,-1,-1,-1,1,"NpixX=",0,"*<Number of pixels in x. Disregarded when SetGeometry( TH2I* hgeometry ) is used.*/");
   G__memvar_setup((void*)((long)(&p->NpixY)-(long)(p)),105,0,0,-1,-1,-1,1,"NpixY=",0,"*<Number of pixels in y. Disregarded when SetGeometry( TH2I* hgeometry ) is used.*/");
   G__memvar_setup((void*)((long)(&p->xSipm)-(long)(p)),100,0,0,-1,-1,-1,1,"xSipm=",0,"*<Size of active area in x*/");
   G__memvar_setup((void*)((long)(&p->ySipm)-(long)(p)),100,0,0,-1,-1,-1,1,"ySipm=",0,"*<Size of active area in y*/");
   G__memvar_setup((void*)((long)(&p->tau_recovery)-(long)(p)),100,0,0,-1,-1,-1,1,"tau_recovery=",0,"*<Pixel recovery time*/");
   G__memvar_setup((void*)((long)(&p->PDE)-(long)(p)),100,0,0,-1,-1,-1,1,"PDE=",0,"*<Photon detection efficiency*/");
   G__memvar_setup((void*)((long)(&p->Pxt)-(long)(p)),100,0,0,-1,-1,-1,1,"Pxt=",0,"*<Cross-talk probability (probability for one ore more cross-talk events per avalanche)*/");
   G__memvar_setup((void*)((long)(&p->Pap_s)-(long)(p)),100,0,0,-1,-1,-1,1,"Pap_s=",0,"*<After-pulse probability (slow)*/");
   G__memvar_setup((void*)((long)(&p->Pap_f)-(long)(p)),100,0,0,-1,-1,-1,1,"Pap_f=",0,"*<After-pulse probability (fast)*/");
   G__memvar_setup((void*)((long)(&p->tau_ap_s)-(long)(p)),100,0,0,-1,-1,-1,1,"tau_ap_s=",0,"*<After-pulse time constant (slow)*/");
   G__memvar_setup((void*)((long)(&p->tau_ap_f)-(long)(p)),100,0,0,-1,-1,-1,1,"tau_ap_f=",0,"*<After-pulse time constant (fast)*/");
   G__memvar_setup((void*)((long)(&p->tau_dr)-(long)(p)),100,0,0,-1,-1,-1,1,"tau_dr=",0,"*<Thermal pulse time constant*/");
   G__memvar_setup((void*)((long)(&p->gain)-(long)(p)),100,0,0,-1,-1,-1,1,"gain=",0,"*<Gain*/");
   G__memvar_setup((void*)((long)(&p->ENF)-(long)(p)),100,0,0,-1,-1,-1,1,"ENF=",0,"*<Excess noise (=gain fluctuations)*/");
   G__memvar_setup((void*)((long)(&p->EN)-(long)(p)),100,0,0,-1,-1,-1,1,"EN=",0,"*<Electronic noise (=pedestal noise)*/");
   G__memvar_setup((void*)((long)(&p->signalAmp)-(long)(p)),100,0,0,-1,-1,-1,1,"signalAmp=",0,"*<Singel pixel signal amplitude*/");
   G__memvar_setup((void*)((long)(&p->noiseRMS)-(long)(p)),100,0,0,-1,-1,-1,1,"noiseRMS=",0,"*<RMS of noise*/");
   G__memvar_setup((void*)((long)(&p->jitter)-(long)(p)),100,0,0,-1,-1,-1,1,"jitter=",0,"*<Jitter of rising edge tau1*/");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TF1),-1,-1,4,"f_pulse_shape=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TF1),-1,-1,4,"f_pulse_shape_intern=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pulse_shape_func_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"update_pulse_shape=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Npix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_HitMatrix),-1,-1,4,"hitMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,4,"g_waveform=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,4,"g_pulse_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pulseIntegral=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"n_pulse_samples=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_GCharge),-1,-1,4,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"gate=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TRandom3),-1,-1,4,"r=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_PhotonList),-1,-1,4,"photonList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2I),-1,-1,4,"h_geometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sampling=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cutOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tau1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tau2=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* daqMC */
static void G__setup_memvardaqMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_daqMC));
   { daqMC *p; p=(daqMC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->responseCurve)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_GResonseCurve),-1,-1,1,"responseCurve=",0,"*<Response curve and resolution graphs*/");
   G__memvar_setup((void*)((long)(&p->g_threshScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraphErrors),-1,-1,1,"g_threshScan=",0,"*<Threshold scan graph*/");
   G__memvar_setup((void*)((long)(&p->h_pe)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,1,"h_pe=",0,"*<Number of detected photons histogram*/");
   G__memvar_setup((void*)((long)(&p->h_dr)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,1,"h_dr=",0,"*<Number of thermal pulses histogram*/");
   G__memvar_setup((void*)((long)(&p->h_xt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,1,"h_xt=",0,"*<SNumber of cross-talk histogram*/");
   G__memvar_setup((void*)((long)(&p->h_ap)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,1,"h_ap=",0,"*<Number of after-pulses histogram*/");
   G__memvar_setup((void*)((long)(&p->h_QDC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,1,"h_QDC=",0,"*<Charge spectrum histogram*/");
   G__memvar_setup((void*)((long)(&p->h_TDC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TH1D),-1,-1,1,"h_TDC=",0,"*<Time spectrum histogram*/");
   G__memvar_setup((void*)((long)(&p->cancel)-(long)(p)),103,0,0,-1,-1,-1,1,"cancel=",0,"*<Cancels simulation process*/");
   G__memvar_setup((void*)((long)(&p->progress)-(long)(p)),100,0,0,-1,-1,-1,1,"progress=",0,"*<Progress of simulation*/");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTDC_channels=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TRandom3),-1,-1,4,"r=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_HitMatrix),-1,-1,4,"hitMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_sipmMC),-1,-1,4,"sipm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_PhotonSource),-1,-1,4,"photonSource=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,4,"g_waveform=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"discriMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"discriWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"plast=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* gossipGUI */
static void G__setup_memvargossipGUI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_gossipGUI));
   { gossipGUI *p; p=(gossipGUI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_sipmMC),-1,-1,4,"sipm=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_PhotonSource),-1,-1,4,"led=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_daqMC),-1,-1,4,"daq=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"measurement=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"c_main=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGMainFrame),-1,-1,4,"mainFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGMainFrame),-1,-1,4,"loadFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),-1,-1,4,"sipmFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),-1,-1,4,"lightSourceFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),-1,-1,4,"daqFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTab),-1,-1,4,"tab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLayoutHints),-1,-1,4,"layout1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLayoutHints),-1,-1,4,"layout2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHProgressBar),-1,-1,4,"progressBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGComboBox),-1,-1,4,"comboBoxLEDgeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGComboBox),-1,-1,4,"comboBoxLEDpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"checkButtonPhotonFluct=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryPDE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryGain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryTau_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryPap1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryTau_ap1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryPap2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryTau_ap2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryENF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryEN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryNpx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryNpy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entrySizeX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entrySizeY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryTau_rec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryTau_le=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryTau_te=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryJitter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entrySignalAmp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entrySampling=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryCutoff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryNgamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryLEDtime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryLEDduration=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryLEDriseTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryLEDxPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryLEDxWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryLEDyPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryLEDyWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryNentries=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryThreshStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryThreshStop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryThreshStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryDiscriMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryDiscriWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryNgammaMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"entryNgammaStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelPDE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelGain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelTau_dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelPap1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelTau_ap1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelPap2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelTau_ap2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelENF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelEN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelNpx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelNpy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelSizeX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelSizeY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelTau_rec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelTau_le=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelTau_te=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelJitter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelSignalAmp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelSampling=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelCutoff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelNgamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDtime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDduration=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDriseTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDxPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDxWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDyPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDyWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelNentries=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelGate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDgeometry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelLEDpulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelNgammaFluct=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelThreshStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelThreshStop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelThreshStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelDiscriMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelDiscriWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelNgammaMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"labelNgammaStep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHitMatrix(void) {
   /* HitMatrix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_HitMatrix));
   G__memfunc_setup("HitMatrix",922,G__Dict_279_0_1, 105, G__get_linked_tagnum(&G__DictLN_HitMatrix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__Dict_279_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "*<Initializes the hitmatrix and delets all hits*/", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__Dict_279_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - type", "*<Deletes all hits of type \"type\"*/", (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,G__Dict_279_0_4, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - x i - - 0 - y "
"d - - 0 - time i - - 0 - type", "*<Adds hit (amplitude = -1, processed = 0). x,y coordinates in units of pixels! (x,y >= 0,0)*/", (void*) NULL, 0);
   G__memfunc_setup("HitProcessed",1229,G__Dict_279_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - iHit", "*<Sets processed flag for iHit*/", (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__Dict_279_0_6, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "h - - 0 - iHit", "*<Returns hit i in the list. Hit vector contains: 0:x, 1:y, 2:type, 3:time, 4:amplitude, 5:processed flag.*/", (void*) NULL, 0);
   G__memfunc_setup("GetProcessed",1224,G__Dict_279_0_7, 103, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - iHit", "*<Returns processed status*/", (void*) NULL, 0);
   G__memfunc_setup("GetPreviousTime",1548,G__Dict_279_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - iHit", "*<Returns time of pixel hit before iHit*/", (void*) NULL, 0);
   G__memfunc_setup("FindHit",678,G__Dict_279_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 0 - aHit", "*<Returns position i of aHit in the list*/", (void*) NULL, 0);
   G__memfunc_setup("EraseHit",789,G__Dict_279_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 0 - aHit", "*<Deletes aHit from the list*/", (void*) NULL, 0);
   G__memfunc_setup("nHits",518,G__Dict_279_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - type", "*<Returns number of hits of type \"type\"*/", (void*) NULL, 0);
   G__memfunc_setup("nHits",518,G__Dict_279_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", "*<Returns total number of hits*/", (void*) NULL, 0);
   G__memfunc_setup("DrawMatrix",1027,G__Dict_279_0_13, 85, G__get_linked_tagnum(&G__DictLN_TH2D), -1, 0, 0, 1, 1, 0, "", "*<Draws all hits of type \"type\" (-1 = all)*/", (void*) NULL, 0);
   G__memfunc_setup("PrintMatrix",1154,G__Dict_279_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", "*<Prints out hitmatrix*/", (void*) NULL, 0);
   G__memfunc_setup("SetAmplitude",1233,G__Dict_279_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - iHit d - - 0 - amplitude", "*<Sets amplitude for iHit*/", (void*) NULL, 0);
   G__memfunc_setup("SetGate",685,G__Dict_279_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - g g - - 0 'true' gCut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeometry",1144,G__Dict_279_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2I' - 0 - geometry", "*<Sets pixel layout*/", (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HitMatrix", 922, G__Dict_279_0_18, (int) ('i'), G__get_linked_tagnum(&G__DictLN_HitMatrix), -1, 0, 1, 1, 1, 0, "u 'HitMatrix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HitMatrix", 1048, G__Dict_279_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_279_0_20, (int) ('u'), G__get_linked_tagnum(&G__DictLN_HitMatrix), -1, 1, 1, 1, 1, 0, "u 'HitMatrix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPhotonList(void) {
   /* PhotonList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_PhotonList));
   G__memfunc_setup("PhotonList",1044,G__Dict_284_0_1, 105, G__get_linked_tagnum(&G__DictLN_PhotonList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPhoton",897,G__Dict_284_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - time", "*<Adds a photon to the list*/", (void*) NULL, 0);
   G__memfunc_setup("AddPhotonList",1309,G__Dict_284_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PhotonList' - 0 - photonList", "*<Adds a complete photon list to the list*/", (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PhotonList", 1044, G__Dict_284_0_4, (int) ('i'), G__get_linked_tagnum(&G__DictLN_PhotonList), -1, 0, 1, 1, 1, 0, "u 'PhotonList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PhotonList", 1170, G__Dict_284_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_284_0_6, (int) ('u'), G__get_linked_tagnum(&G__DictLN_PhotonList), -1, 1, 1, 1, 1, 0, "u 'PhotonList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPhotonSource(void) {
   /* PhotonSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_PhotonSource));
   G__memfunc_setup("PhotonSource",1257,G__Dict_287_0_1, 105, G__get_linked_tagnum(&G__DictLN_PhotonSource), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeneratePhotons",1558,G__Dict_287_0_2, 117, G__get_linked_tagnum(&G__DictLN_PhotonList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShape",797,G__Dict_287_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Shape", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShape",797,G__Dict_287_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - h_shape", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse",821,G__Dict_287_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Pulse", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPulse",821,G__Dict_287_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - h_time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXY",477,G__Dict_287_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - X d - - 0 - Y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXYWidth",989,G__Dict_287_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - Xwidth d - - 0 - Ywidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__Dict_287_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - T", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeWidth",1211,G__Dict_287_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Twidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRiseTime",1102,G__Dict_287_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Trise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNgamma",893,G__Dict_287_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nGamma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFluctuation",1466,G__Dict_287_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - fluct", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PhotonSource", 1257, G__Dict_287_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_PhotonSource), -1, 0, 1, 1, 1, 0, "u 'PhotonSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PhotonSource", 1383, G__Dict_287_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_287_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_PhotonSource), -1, 1, 1, 1, 1, 0, "u 'PhotonSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncsipmMC(void) {
   /* sipmMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_sipmMC));
   G__memfunc_setup("sipmMC",585,G__Dict_336_0_1, 105, G__get_linked_tagnum(&G__DictLN_sipmMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__Dict_336_0_2, 85, G__get_linked_tagnum(&G__DictLN_sipmMC), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (sipmMC* (*)())(&sipmMC::Instance) ), 0);
   G__memfunc_setup("Generate",811,G__Dict_336_0_3, 100, -1, -1, 0, 1, 1, 1, 0, "u 'PhotonList' - 0 - photons", "*<Generates SiPM response*/", (void*) NULL, 0);
   G__memfunc_setup("GetParaFile",1060,G__Dict_336_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", "*<Sets SiPM parameters from config file*/", (void*) NULL, 0);
   G__memfunc_setup("SetGeometry",1144,G__Dict_336_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - Geometry", "*<Sets pixel arrangement. Only \"square\" implemented at the moment*/", (void*) NULL, 0);
   G__memfunc_setup("SetGeometry",1144,G__Dict_336_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2I' - 0 - hgeometry", "*<Sets custom pixel arrangement from TH2I*/", (void*) NULL, 0);
   G__memfunc_setup("SetPulseShape",1318,G__Dict_336_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - Tau1 d - - 0 - Tau2", "*<Sets double exponential single pixel waveform with time constants \"Tau1\", \"Tau2\". \"Sampling\" is the sampling time of the simualtion in ns. Waveform is cut off at a fraction \"cutOff\" of the amplitude*/", (void*) NULL, 0);
   G__memfunc_setup("SetPulseShape",1318,G__Dict_336_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - pulse_shape", "*<Sets single pixel waveform from TF1*/", (void*) NULL, 0);
   G__memfunc_setup("SetSampling",1127,G__Dict_336_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Sampling", "*<Sets waveform sampling*/", (void*) NULL, 0);
   G__memfunc_setup("SetCutoff",915,G__Dict_336_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Cutoff", "*<Sets pixel waveform cutoff*/", (void*) NULL, 0);
   G__memfunc_setup("SetGate",685,G__Dict_336_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - Gate g - - 0 'true' gateCut", "*<Sets integration gate. (For information on \"gateCut\" see HitMatrix class)*/", (void*) NULL, 0);
   G__memfunc_setup("GetWaveform",1127,G__Dict_336_0_12, 85, G__get_linked_tagnum(&G__DictLN_TGraph), -1, 0, 0, 1, 1, 0, "", "*<Returns simulated signal waveform*/", (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__Dict_336_0_13, 117, G__get_linked_tagnum(&G__DictLN_GCharge), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGate",673,G__Dict_336_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPulseShape",1306,G__Dict_336_0_15, 85, G__get_linked_tagnum(&G__DictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitMatrix",1210,G__Dict_336_0_16, 85, G__get_linked_tagnum(&G__DictLN_HitMatrix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpix",703,G__Dict_336_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSampling",1115,G__Dict_336_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdatePulseShape",1629,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "*<Builds g_pulse_charge*/", (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ImportPhotons",1382,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'PhotonList' - 0 - photons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitHitMatrix",1326,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("sipmMC", 585, G__Dict_336_0_23, (int) ('i'), G__get_linked_tagnum(&G__DictLN_sipmMC), -1, 0, 1, 1, 1, 0, "u 'sipmMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~sipmMC", 711, G__Dict_336_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_336_0_25, (int) ('u'), G__get_linked_tagnum(&G__DictLN_sipmMC), -1, 1, 1, 1, 1, 0, "u 'sipmMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdaqMC(void) {
   /* daqMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_daqMC));
   G__memfunc_setup("GetListOfSignals",1602,G__Dict_338_0_1, 85, G__get_linked_tagnum(&G__DictLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Dict_338_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Dict_338_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__Dict_338_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__Dict_338_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__Dict_338_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Dict_338_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__Dict_338_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__Dict_338_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__Dict_338_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("daqMC",454,G__Dict_338_0_26, 105, G__get_linked_tagnum(&G__DictLN_daqMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSiPM",645,G__Dict_338_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "U 'sipmMC' - 0 - mySiPM", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhotonSource",1557,G__Dict_338_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PhotonSource' - 0 - myPhotonSource", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Statistic",952,G__Dict_338_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - N", "*<Plots number of pde, ct, ap, dr events in \"N\" events*/", (void*) NULL, 0);
   G__memfunc_setup("Scope",506,G__Dict_338_0_30, 85, G__get_linked_tagnum(&G__DictLN_TGraph), -1, 0, 0, 1, 1, 0, "", "*<Returns waveform*/", (void*) NULL, 0);
   G__memfunc_setup("QDCSpectrum",1067,G__Dict_338_0_31, 85, G__get_linked_tagnum(&G__DictLN_TH1D), -1, 0, 1, 1, 1, 0, "i - - 0 - N", "*<Simulates charge spectrum with \"N\" events*/", (void*) NULL, 0);
   G__memfunc_setup("ThreshScan",1011,G__Dict_338_0_32, 85, G__get_linked_tagnum(&G__DictLN_TGraphErrors), -1, 0, 4, 1, 1, 0, 
"d - - 0 - gate d - - 0 - tstart "
"d - - 0 - tstop d - - 0 - tstep", "*<Simulates theshold scan with \"gate\" integration time and thresholds from \"tstart\" to \"tstop\" with step size \"tstep\"*/", (void*) NULL, 0);
   G__memfunc_setup("TDCSpectrum",1070,G__Dict_338_0_33, 85, G__get_linked_tagnum(&G__DictLN_TH1D), -1, 0, 1, 1, 1, 0, "i - - 0 - N", "*<Simulated time spectrum with \"N\" events*/", (void*) NULL, 0);
   G__memfunc_setup("DynamicRange",1202,G__Dict_338_0_34, 117, G__get_linked_tagnum(&G__DictLN_GResonseCurve), -1, 0, 3, 1, 1, 0, 
"i - - 0 - N d - - 0 - Ngamma_max "
"d - - 0 - Ngamma_step", "*<Simulates saturation curve and RMS with \"N\" events per intensity from 0 to \"Ngamma_max\" photons with \"Ngamma_step\" step width*/", (void*) NULL, 0);
   G__memfunc_setup("QDC",216,G__Dict_338_0_35, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - charge", "*<Returns charge in QDC channels*/", (void*) NULL, 0);
   G__memfunc_setup("SetQDCChannels",1328,G__Dict_338_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nChannels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__Dict_338_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Pedestal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiscriMinTime",1597,G__Dict_338_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - mintime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiscriWidth",1418,G__Dict_338_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Discriminator",1368,G__Dict_338_0_40, 85, G__get_linked_tagnum(&G__DictLN_TGraph), -1, 0, 2, 1, 1, 0, 
"U 'TGraph' - 0 - waveform d - - 0 - threshold", "*<Returns discriminated waveform (MAY STILL BE BUGGY!)*/", (void*) NULL, 0);
   G__memfunc_setup("Progress",853,G__Dict_338_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", "*SIGNAL*								", (void*) NULL, 0);
   G__memfunc_setup("Check",478,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~daqMC", 580, G__Dict_338_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgossipGUI(void) {
   /* gossipGUI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_gossipGUI));
   G__memfunc_setup("gossipGUI",890,G__Dict_467_0_1, 105, G__get_linked_tagnum(&G__DictLN_gossipGUI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildMainFrame",1376,G__Dict_467_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildLoadFrame",1371,G__Dict_467_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildSiPMFrame",1332,G__Dict_467_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGFrame' - 0 - parentFrame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildLightSourceFrame",2116,G__Dict_467_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGFrame' - 0 - parentFrame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildDAQFrame",1201,G__Dict_467_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGFrame' - 0 - parentFrame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onTabSwitch",1126,G__Dict_467_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onRunButtonClicked",1853,G__Dict_467_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("onCancelButtonClicked",2126,G__Dict_467_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__Dict_467_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProgress",1153,G__Dict_467_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectMeasurement",1766,G__Dict_467_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("gossipGUI", 890, G__Dict_467_0_13, (int) ('i'), G__get_linked_tagnum(&G__DictLN_gossipGUI), -1, 0, 1, 1, 1, 0, "u 'gossipGUI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~gossipGUI", 1016, G__Dict_467_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_467_0_15, (int) ('u'), G__get_linked_tagnum(&G__DictLN_gossipGUI), -1, 1, 1, 1, 1, 0, "u 'gossipGUI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__DictLN_TH2I = { "TH2I" , 99 , -1 };
G__linked_taginfo G__DictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__DictLN_HitMatrix = { "HitMatrix" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_PhotonList = { "PhotonList" , 99 , -1 };
G__linked_taginfo G__DictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__DictLN_PhotonSource = { "PhotonSource" , 99 , -1 };
G__linked_taginfo G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__DictLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__DictLN_GCharge = { "GCharge" , 115 , -1 };
G__linked_taginfo G__DictLN_sipmMC = { "sipmMC" , 99 , -1 };
G__linked_taginfo G__DictLN_GResonseCurve = { "GResonseCurve" , 115 , -1 };
G__linked_taginfo G__DictLN_daqMC = { "daqMC" , 99 , -1 };
G__linked_taginfo G__DictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__DictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__DictLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__DictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__DictLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__DictLN_TGComboBox = { "TGComboBox" , 99 , -1 };
G__linked_taginfo G__DictLN_TGHProgressBar = { "TGHProgressBar" , 99 , -1 };
G__linked_taginfo G__DictLN_gossipGUI = { "gossipGUI" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictLN_string.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TList.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictLN_TF1.tagnum = -1 ;
  G__DictLN_TH1D.tagnum = -1 ;
  G__DictLN_TH1.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictLN_TH2.tagnum = -1 ;
  G__DictLN_TH2I.tagnum = -1 ;
  G__DictLN_TH2D.tagnum = -1 ;
  G__DictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TQObjSender.tagnum = -1 ;
  G__DictLN_TCanvas.tagnum = -1 ;
  G__DictLN_HitMatrix.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_PhotonList.tagnum = -1 ;
  G__DictLN_TRandom3.tagnum = -1 ;
  G__DictLN_PhotonSource.tagnum = -1 ;
  G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictLN_TGraph.tagnum = -1 ;
  G__DictLN_TGraphErrors.tagnum = -1 ;
  G__DictLN_GCharge.tagnum = -1 ;
  G__DictLN_sipmMC.tagnum = -1 ;
  G__DictLN_GResonseCurve.tagnum = -1 ;
  G__DictLN_daqMC.tagnum = -1 ;
  G__DictLN_TGFrame.tagnum = -1 ;
  G__DictLN_TGCompositeFrame.tagnum = -1 ;
  G__DictLN_TGLayoutHints.tagnum = -1 ;
  G__DictLN_TGMainFrame.tagnum = -1 ;
  G__DictLN_TGTab.tagnum = -1 ;
  G__DictLN_TGCheckButton.tagnum = -1 ;
  G__DictLN_TGNumberEntry.tagnum = -1 ;
  G__DictLN_TGLabel.tagnum = -1 ;
  G__DictLN_TGComboBox.tagnum = -1 ;
  G__DictLN_TGHProgressBar.tagnum = -1 ;
  G__DictLN_gossipGUI.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_string);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TList);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TF1);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TH2);
   G__get_linked_tagnum_fwd(&G__DictLN_TH2I);
   G__get_linked_tagnum_fwd(&G__DictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__DictLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_HitMatrix),sizeof(HitMatrix),-1,34048,(char*)NULL,G__setup_memvarHitMatrix,G__setup_memfuncHitMatrix);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_PhotonList),sizeof(PhotonList),-1,34048,(char*)NULL,G__setup_memvarPhotonList,G__setup_memfuncPhotonList);
   G__get_linked_tagnum_fwd(&G__DictLN_TRandom3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_PhotonSource),sizeof(PhotonSource),-1,1280,(char*)NULL,G__setup_memvarPhotonSource,G__setup_memfuncPhotonSource);
   G__get_linked_tagnum_fwd(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__DictLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__DictLN_GCharge);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_sipmMC),sizeof(sipmMC),-1,1280,(char*)NULL,G__setup_memvarsipmMC,G__setup_memfuncsipmMC);
   G__get_linked_tagnum_fwd(&G__DictLN_GResonseCurve);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_daqMC),sizeof(daqMC),-1,1280,(char*)NULL,G__setup_memvardaqMC,G__setup_memfuncdaqMC);
   G__get_linked_tagnum_fwd(&G__DictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__DictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGTab);
   G__get_linked_tagnum_fwd(&G__DictLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__DictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__DictLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__DictLN_TGComboBox);
   G__get_linked_tagnum_fwd(&G__DictLN_TGHProgressBar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_gossipGUI),sizeof(gossipGUI),-1,1280,(char*)NULL,G__setup_memvargossipGUI,G__setup_memfuncgossipGUI);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

